using Microsoft.EntityFrameworkCore;
using APIPRA.Models;
using System.Text.Json.Serialization;

var builder = WebApplication.CreateBuilder(args);

// –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω–µ—Ç ‚Äî 8080 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
var port = Environment.GetEnvironmentVariable("PORT") ?? "8080";

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Kestrel
builder.WebHost.ConfigureKestrel(options =>
{
    options.ListenAnyIP(int.Parse(port));
});
builder.Services.AddControllers()
    .AddJsonOptions(options =>
    {
        options.JsonSerializerOptions.ReferenceHandler = ReferenceHandler.IgnoreCycles;
    });
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();
// –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ –≤ –Ω–∞—á–∞–ª–æ –º–µ—Ç–æ–¥–∞ Main –∏–ª–∏ ConfigureServices
AppContext.SetSwitch("Npgsql.EnableLegacyTimestampBehavior", false);
// üîß –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
builder.Services.AddDbContext<PostgresContext>(options =>
    options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultConnection"))
        .LogTo(Console.WriteLine, LogLevel.Information)
        .EnableSensitiveDataLogging());
// ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º CORS
builder.Services.AddCors(options =>
{
    options.AddDefaultPolicy(policy =>
    {
        policy.AllowAnyOrigin()
              .AllowAnyMethod()
              .AllowAnyHeader();
    });
});

var app = builder.Build();
if (app.Environment.IsDevelopment())
{
    app.UseDeveloperExceptionPage();
}
app.UseSwagger();
app.UseSwaggerUI();

// ‚úÖ –í–∫–ª—é—á–∞–µ–º CORS
app.UseCors();

app.UseHttpsRedirection();
app.UseAuthorization();

app.MapControllers();

app.Run();
